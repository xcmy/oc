{\rtf1\ansi\ansicpg936\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
+(BOOL)isNetworkReachable\{\
\'a0\'a0\'a0\'a0// Create zero addy\
\'a0\'a0\'a0\'a0struct sockaddr_in zeroAddress;\
\'a0\'a0\'a0\'a0bzero(&zeroAddress, sizeof(zeroAddress));\
\'a0\'a0\'a0\'a0zeroAddress.sin_len = sizeof(zeroAddress);\
\'a0\'a0\'a0\'a0zeroAddress.sin_family = AF_INET;\
\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0// Recover reachability flags\
\'a0\'a0\'a0\'a0SCNetworkReachabilityRef defaultRouteReachability = SCNetworkReachabilityCreateWithAddress(NULL, (struct sockaddr *)&zeroAddress);\
\'a0\'a0\'a0\'a0SCNetworkReachabilityFlags flags;\
\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0BOOL didRetrieveFlags = SCNetworkReachabilityGetFlags(defaultRouteReachability, &flags);\
\'a0\'a0\'a0\'a0CFRelease(defaultRouteReachability);\
\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0if (!didRetrieveFlags)\
\'a0\'a0\'a0\'a0\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return NO;\
\'a0\'a0\'a0\'a0\}\
\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0BOOL isReachable = flags & kSCNetworkFlagsReachable;\
\'a0\'a0\'a0\'a0BOOL needsConnection = flags & kSCNetworkFlagsConnectionRequired;\
\'a0\'a0\'a0\'a0return (isReachable && !needsConnection) ? YES : NO;\
\} }